[project]
name = "noticiencias-news-collector"
dynamic = ["version"]
description = "Scientific news aggregation pipeline for the Noticiencias project"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Noticiencias Team" }]

[project.optional-dependencies]
security = [
    "bandit>=1.7.9",
    "pip-audit>=2.9.0",
    "trufflehog3>=3.0.10",
]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {file = "VERSION"}

[tool.ruff]
target-version = "py310"
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "W",  # pycodestyle warnings
    "B",  # flake8-bugbear
]
ignore = [
    "E203",  # whitespace before ':' (black compatibility)
    "E402",  # allow runtime path adjustments before imports
    "E501",  # long URLs and SQL statements managed manually
    "B027",  # allow optional no-op hooks in abstract classes
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "tests", "scripts"]

[tool.mypy]
python_version = "3.10"
packages = ["src", "tests"]
ignore_missing_imports = true
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
strict_optional = true
no_implicit_optional = true
follow_imports = "normal"
plugins = []

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "config.*",
    "noticiencias.*",
    "src.collectors.*",
    "src.contracts.*",
    "src.enrichment.*",
    "src.monitoring.*",
    "src.perf.*",
    "src.reranker.*",
    "src.scoring.*",
    "src.serving.*",
    "src.storage.*",
    "src.utils.datetime_utils",
    "src.utils.dedupe",
    "src.utils.metrics",
    "src.utils.pydantic_compat",
    "src.utils.text_cleaner",
    "tools.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = [".", "src"]
addopts = "-ra --cov=src/contracts --cov=src/reranker --cov=src/utils --cov-branch --cov-report=term-missing --cov-fail-under=80"
markers = [
    "e2e: end-to-end scenarios that exercise the pipeline",
    "perf: performance-focused regression tests",
    "security: security and compliance checks",
]

[tool.coverage.run]
branch = true
source = ["src/contracts", "src/reranker", "src/utils"]
omit = [
    "src/utils/logger.py",
    "src/utils/metrics.py",
    "src/utils/datetime_utils.py",
]

[tool.coverage.report]
precision = 2
skip_covered = false
show_missing = true

[tool.mutmut]
paths_to_mutate = [
    "src/utils/text_cleaner.py",
    "src/utils/url_canonicalizer.py",
]
tests_dir = [
    "tests/mutation_smoke",
    "tests/property",
    "tests/test_text_cleaner.py",
    "tests/test_url_canonicalizer.py",
]
also_copy = [
    "config",
    "noticiencias",
    "src",
    "tests",
    "run_collector.py",
    "VERSION",
]
python_paths = ["src"]
runner = "python -m pytest"
backup = false

[tool.ruff.lint.per-file-ignores]
"src/serving/api.py" = ["B008"]
