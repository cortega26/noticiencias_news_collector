{
  "errors": [],
  "generated_at": "2025-09-30T16:08:09Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 8,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 7,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 4408,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 32,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/collectors/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 26,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/collectors/async_rss_collector.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 216,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/collectors/base_collector.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 385,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/collectors/rss_collector.py": {
      "CONFIDENCE.HIGH": 2,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 640,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/enrichment/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 3,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/enrichment/pipeline.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 209,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/reranker/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 3,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/reranker/reranker.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 46,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/scoring/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 37,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/scoring/basic_scorer.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 658,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/scoring/feature_scorer.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 188,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/storage/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 37,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/storage/database.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 695,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/storage/models.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 292,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 10,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/datetime_utils.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 56,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/dedupe.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 39,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/logger.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 300,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/observability.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 327,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/text_cleaner.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 77,
      "nosec": 0,
      "skipped_tests": 0
    },
    "src/utils/url_canonicalizer.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 132,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "85             )\n86             jitter = random.uniform(0, RATE_LIMITING_CONFIG.get(\"jitter_max\", 0.3))\n87             next_time = self._domain_next_time.get(domain, 0.0)\n",
      "col_offset": 21,
      "end_col_offset": 83,
      "filename": "src/collectors/async_rss_collector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 86,
      "line_range": [
        86
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "105                         max_b = RATE_LIMITING_CONFIG.get(\"backoff_max\", 10.0)\n106                         jitter = random.uniform(\n107                             0, RATE_LIMITING_CONFIG.get(\"jitter_max\", 0.3)\n108                         )\n109                         delay = min(max_b, (base * (2**attempt)) + jitter)\n",
      "col_offset": 33,
      "end_col_offset": 25,
      "filename": "src/collectors/async_rss_collector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 106,
      "line_range": [
        106,
        107,
        108
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "128                     max_b = RATE_LIMITING_CONFIG.get(\"backoff_max\", 10.0)\n129                     jitter = random.uniform(\n130                         0, RATE_LIMITING_CONFIG.get(\"jitter_max\", 0.3)\n131                     )\n132                     delay = min(max_b, (base * (2**attempt)) + jitter)\n",
      "col_offset": 29,
      "end_col_offset": 21,
      "filename": "src/collectors/async_rss_collector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 129,
      "line_range": [
        129,
        130,
        131
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "160         )\n161         jitter = random.uniform(0, RATE_LIMITING_CONFIG.get(\"jitter_max\", 0.3))\n162         wait = (last + effective_delay + jitter) - now\n",
      "col_offset": 17,
      "end_col_offset": 79,
      "filename": "src/collectors/rss_collector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 161,
      "line_range": [
        161
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "169         max_b = RATE_LIMITING_CONFIG.get(\"backoff_max\", 10.0)\n170         jitter = random.uniform(0, RATE_LIMITING_CONFIG.get(\"jitter_max\", 0.3))\n171         delay = min(max_b, (base * (2**attempt)) + jitter)\n",
      "col_offset": 17,
      "end_col_offset": 79,
      "filename": "src/collectors/rss_collector.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 170,
      "line_range": [
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "19 \n20     rng = random.Random(seed)\n21     shuffled = articles[:]\n",
      "col_offset": 10,
      "end_col_offset": 29,
      "filename": "src/reranker/reranker.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 330,
        "link": "https://cwe.mitre.org/data/definitions/330.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 20,
      "line_range": [
        20
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "35     for token in tokens:\n36         h = int(hashlib.md5(token.encode(\"utf-8\")).hexdigest(), 16)\n37         for i in range(num_bits):\n",
      "col_offset": 16,
      "end_col_offset": 50,
      "filename": "src/utils/dedupe.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 327,
        "link": "https://cwe.mitre.org/data/definitions/327.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
      "test_id": "B324",
      "test_name": "hashlib"
    },
    {
      "code": "41                 el.extract()\n42             except Exception:\n43                 pass\n44     text = soup.get_text(\" \")\n",
      "col_offset": 12,
      "end_col_offset": 20,
      "filename": "src/utils/text_cleaner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 42,
      "line_range": [
        42,
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    }
  ]
}