name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Bootstrap environment
        run: make bootstrap

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Lint
        run: make lint

  type:
    name: Type check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Type check
        run: make typecheck

  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Run tests
        run: make test
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: reports/coverage
          if-no-files-found: warn

  e2e:
    name: End-to-end
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Run end-to-end suite
        run: make e2e

  perf:
    name: Performance
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Run performance suite
        run: make perf
      - name: Upload performance reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: perf-reports
          path: reports/perf
          if-no-files-found: warn

  security:
    name: Security
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Run security scans
        run: make security
      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/security
          if-no-files-found: warn

  audit-todos:
    name: Placeholder audit
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.lock
            requirements-security.lock
      - name: Run placeholder audit
        run: make audit-todos-check
      - name: Upload placeholder reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: placeholder-reports
          path: |
            reports/placeholders.csv
            reports/placeholders.json
            reports/placeholders.md
            reports/placeholders.baseline.json
          if-no-files-found: warn
      - name: Comment on failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'reports/placeholders.md';
            let body = 'üîç Placeholder audit failed. See workflow logs for details.';
            if (fs.existsSync(path)) {
              const content = fs.readFileSync(path, 'utf8');
              const segments = content.split('## New vs Baseline');
              if (segments.length > 1) {
                const excerpt = segments[1].trim().split('\n').slice(0, 20).join('\n');
                body = `üîç Placeholder audit failed.\n\n${excerpt}`;
              } else {
                const excerpt = content.trim().split('\n').slice(0, 20).join('\n');
                body = `üîç Placeholder audit failed.\n\n${excerpt}`;
              }
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });

  update-ci-badge:
    name: Update CI badge
    needs:
      - setup
      - lint
      - type
      - test
      - e2e
      - perf
      - security
      - audit-todos
    if: ${{ github.event_name == 'push' && always() }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download CI badge
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p docs/assets
          curl --fail --location \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: image/svg+xml" \
            "https://api.github.com/repos/noticiencias/noticiencias_news_collector/actions/workflows/ci.yml/badge" \
            -o docs/assets/ci-status.svg
      - name: Commit updated badge
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update CI status badge"
          file_pattern: docs/assets/ci-status.svg
